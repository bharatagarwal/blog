<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>//localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo 0.125.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2024 15:13:44 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>General tips for learning assembly</title>
      <link>//localhost:1313/general-tips-assembly/</link>
      <pubDate>Thu, 18 Apr 2024 15:13:44 +0000</pubDate>
      <guid>//localhost:1313/general-tips-assembly/</guid>
      <description>learn both syntaxes&#xA;start with bartlett pick up nasm docs&#xA;have arguments, clobbered, unclobbered in hand clobbered and unclobbered as an alternative to caller and callee saved</description>
    </item>
    <item>
      <title>lea v/s mov in x86 Assembly</title>
      <link>//localhost:1313/lea-vs-mov/</link>
      <pubDate>Thu, 18 Apr 2024 15:10:46 +0000</pubDate>
      <guid>//localhost:1313/lea-vs-mov/</guid>
      <description>The dilemma In x86/64 assembly intel syntax, for a long time, I&amp;rsquo;ve been confused between the load effective address (lea) and move (mov) instructions.&#xA;I&amp;rsquo;ve been imagining was that LEA has been doing some magic, taking contextual decisions based on whether the values inside the square bracket are addresses or naive values. This seemed counter-intuitive, seeing as assembly is supposed to be simpler than most languages.&#xA;An example Say, you have the value 0xffffffa in rax.</description>
    </item>
    <item>
      <title>LLDB abbreviation reference</title>
      <link>//localhost:1313/lldb-abbr-ref/</link>
      <pubDate>Thu, 18 Apr 2024 15:10:08 +0000</pubDate>
      <guid>//localhost:1313/lldb-abbr-ref/</guid>
      <description>Command Description add-dsym Add a debug symbol file to one of the target&amp;rsquo;s current modules by specifying a path to a debug symbols file or by using the options to specify a module. attach Attach to process by ID or name. b Set a breakpoint using one of several shorthand formats. bt Show the current thread&amp;rsquo;s call stack. Any numeric argument displays at most that many frames. The argument &amp;lsquo;all&amp;rsquo; displays all threads.</description>
    </item>
    <item>
      <title>LLDB command reference</title>
      <link>//localhost:1313/lldb-command-reference/</link>
      <pubDate>Thu, 18 Apr 2024 15:09:47 +0000</pubDate>
      <guid>//localhost:1313/lldb-command-reference/</guid>
      <description>Command Description apropos List debugger commands related to a word or subject. breakpoint Commands for operating on breakpoints (see &amp;lsquo;help b&amp;rsquo; for shorthand.) command Commands for managing custom LLDB commands. disassemble Disassemble specified instructions in the current target. Defaults to the current function for the current thread and stack frame. expression Evaluate an expression on the current thread. Displays any returned value with LLDB&amp;rsquo;s default formatting. frame Commands for selecting and examing the current thread&amp;rsquo;s stack frames.</description>
    </item>
    <item>
      <title>Math and me</title>
      <link>//localhost:1313/math/</link>
      <pubDate>Thu, 18 Apr 2024 15:09:17 +0000</pubDate>
      <guid>//localhost:1313/math/</guid>
      <description>I&amp;rsquo;ve always been a little scared of mathematical notations. They feel like symbols from an alien intelligence that is smarter than human.&#xA;Every time I see a summation formula, I feel dumb. I&amp;rsquo;ve been trying to study data structures and algorithms as an academic topic, something that can stimulate the mind. To do that, things have come to a head &amp;ndash; either I learn to be comfortable speaking mathematically, or I&amp;rsquo;m forever in the &amp;lsquo;do this to get a job and it&#39;s enough&amp;rsquo; camp.</description>
    </item>
    <item>
      <title>Mem read in x86 Assembly</title>
      <link>//localhost:1313/mem-read/</link>
      <pubDate>Thu, 18 Apr 2024 15:07:36 +0000</pubDate>
      <guid>//localhost:1313/mem-read/</guid>
      <description>You have to initialise mem read with an address.&#xA;mem read --size 1 --num-per-line 1 --format x --count 20 Subsequent calls to mem read without specifying an address will keep moving forward, based on the count of the previous mem read.</description>
    </item>
    <item>
      <title>Pass-by-reference and pass-by-value in x86 Assembly</title>
      <link>//localhost:1313/pass-by-value-reference-assembly/</link>
      <pubDate>Thu, 18 Apr 2024 15:05:41 +0000</pubDate>
      <guid>//localhost:1313/pass-by-value-reference-assembly/</guid>
      <description>64 bits, and what can fit inside Samples, and seeing the data types that can fit in registers, and what fit inside memory</description>
    </item>
    <item>
      <title>Proof of the summation formula for first n integers</title>
      <link>//localhost:1313/summation-fib-proofs-use-cases/</link>
      <pubDate>Thu, 18 Apr 2024 15:04:35 +0000</pubDate>
      <guid>//localhost:1313/summation-fib-proofs-use-cases/</guid>
      <description>prove the summation formula odd, even, then generalise prove the fib closed-form soln&#xA;explore alex kantorovich conversation about LEAN, and what it means to learn proofs via programming</description>
    </item>
    <item>
      <title>My thoughts on the Rise of Worse is Better</title>
      <link>//localhost:1313/worse-is-better/</link>
      <pubDate>Thu, 18 Apr 2024 15:03:22 +0000</pubDate>
      <guid>//localhost:1313/worse-is-better/</guid>
      <description>write your thoughts on this article:&#xA;https://www.jwz.org/doc/worse-is-better.html</description>
    </item>
    <item>
      <title>LLDB abbreviation translations</title>
      <link>//localhost:1313/lldb-abbr-trans/</link>
      <pubDate>Thu, 18 Apr 2024 15:00:43 +0000</pubDate>
      <guid>//localhost:1313/lldb-abbr-trans/</guid>
      <description> Abbreviation Full form attach _regexp-attach b _regexp-break bt _regexp-bt display _regexp-display down _regexp-down env _regexp-env jump _regexp-jump list _regexp-list tbreak _regexp-tbreak undisplay _regexp-undisplay up _regexp-up rbreak breakpoint set -r %1 dis disassemble call expression &amp;ndash; p expression &amp;ndash; po expression -O &amp;ndash; poarray expression -O -Z %1 &amp;ndash; parray expression -Z %1 &amp;ndash; f frame select var frame variable x memory read shell platform shell -h &amp;ndash; c process continue continue process continue detach process detach kill process kill r process launch -c /bin/bash &amp;ndash; exit quit q quit re register history session history file target create image target modules add-dsym target symbols add t thread select sif thread step-in -e block -t %1 step thread step-in si thread step-inst ni thread step-inst-over finish thread step-out next thread step-over </description>
    </item>
    <item>
      <title>Integer Representation</title>
      <link>//localhost:1313/integer-representation/</link>
      <pubDate>Thu, 18 Apr 2024 13:38:58 +0000</pubDate>
      <guid>//localhost:1313/integer-representation/</guid>
      <description>Adder diagram&#xA;Grade school mathematics&#xA;Unsigned integers and their overflows&#xA;Signed &amp;ndash; signed, one&amp;rsquo;s, bias&#xA;Different flow diagrams&#xA;Detection via carry-in and carry-out</description>
    </item>
    <item>
      <title>How to slay interviews and not be slain by them.</title>
      <link>//localhost:1313/slay-interviews/</link>
      <pubDate>Thu, 18 Apr 2024 11:55:47 +0000</pubDate>
      <guid>//localhost:1313/slay-interviews/</guid>
      <description>Even though you might have your issues with whiteboard/ds-algo interviews, they are inevitable.&#xA;The only way out is through the belly of the beast, so cry havoc and let slip the dogs of whiteboard.&#xA;Interviewing: is distinct from being a good engineer&#xA;is learnable &amp;ndash; no one starts off being amazing&#xA;requires special knowledge &amp;ndash; you will fail most interviews if you haven&amp;rsquo;t learned the material sufficiently&#xA;required practice &amp;ndash; several months typically</description>
    </item>
  </channel>
</rss>
